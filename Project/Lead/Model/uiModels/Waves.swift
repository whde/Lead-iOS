//
//  Test.swift
//  UI
//
//  Created by Ye on 2018/10/26.
//  Copyright Â© 2018 Ye. All rights reserved.
//
//  Generated by PaintCode



import UIKit

public class Waves : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawWaves(frame: CGRect = CGRect(x: 94, y: 72, width: 414, height: 36)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let strokeColor = UIColor(red: 0.914, green: 0.914, blue: 0.914, alpha: 0.494)
        let strokeColor2 = UIColor(red: 0.867, green: 0.867, blue: 0.867, alpha: 0.377)
        let strokeColor3 = UIColor(red: 0.957, green: 0.957, blue: 0.957, alpha: 0.758)


        //// Subframes
        let waves: CGRect = CGRect(x: frame.minX, y: frame.minY + fastFloor((frame.height - 23) * 0.38462 - 0.5) + 1, width: frame.width, height: 23)


        //// waves
        //// Bezier 1 Drawing
        let bezier1Path = UIBezierPath()
        bezier1Path.move(to: CGPoint(x: waves.minX + 0.00000 * waves.width, y: waves.minY + 23))
        bezier1Path.addCurve(to: CGPoint(x: waves.minX + 0.13287 * waves.width, y: waves.minY + 4.99), controlPoint1: CGPoint(x: waves.minX + 0.00000 * waves.width, y: waves.minY + 23), controlPoint2: CGPoint(x: waves.minX + 0.07917 * waves.width, y: waves.minY + 6.01))
        bezier1Path.addCurve(to: CGPoint(x: waves.minX + 0.38621 * waves.width, y: waves.minY + 19.34), controlPoint1: CGPoint(x: waves.minX + 0.18657 * waves.width, y: waves.minY + 3.97), controlPoint2: CGPoint(x: waves.minX + 0.26469 * waves.width, y: waves.minY + 19.34))
        bezier1Path.addCurve(to: CGPoint(x: waves.minX + 0.70114 * waves.width, y: waves.minY + 0.06), controlPoint1: CGPoint(x: waves.minX + 0.50772 * waves.width, y: waves.minY + 19.34), controlPoint2: CGPoint(x: waves.minX + 0.52130 * waves.width, y: waves.minY - 1.28))
        bezier1Path.addCurve(to: CGPoint(x: waves.minX + 1.00000 * waves.width, y: waves.minY + 23), controlPoint1: CGPoint(x: waves.minX + 0.82104 * waves.width, y: waves.minY + 0.96), controlPoint2: CGPoint(x: waves.minX + 0.92066 * waves.width, y: waves.minY + 8.61))
        strokeColor.setStroke()
        bezier1Path.lineWidth = 2
        bezier1Path.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: waves.minX + 0.00000 * waves.width, y: waves.minY + 15.64))
        bezier2Path.addCurve(to: CGPoint(x: waves.minX + 0.19802 * waves.width, y: waves.minY + 15.64), controlPoint1: CGPoint(x: waves.minX + 0.03417 * waves.width, y: waves.minY + 8.7), controlPoint2: CGPoint(x: waves.minX + 0.14135 * waves.width, y: waves.minY + 15.64))
        bezier2Path.addCurve(to: CGPoint(x: waves.minX + 0.42143 * waves.width, y: waves.minY + 11.65), controlPoint1: CGPoint(x: waves.minX + 0.25469 * waves.width, y: waves.minY + 15.64), controlPoint2: CGPoint(x: waves.minX + 0.30763 * waves.width, y: waves.minY + 15.36))
        bezier2Path.addCurve(to: CGPoint(x: waves.minX + 0.69400 * waves.width, y: waves.minY + 11.66), controlPoint1: CGPoint(x: waves.minX + 0.53522 * waves.width, y: waves.minY + 7.94), controlPoint2: CGPoint(x: waves.minX + 0.51415 * waves.width, y: waves.minY + 13.03))
        bezier2Path.addCurve(to: CGPoint(x: waves.minX + 1.00000 * waves.width, y: waves.minY + 0.92), controlPoint1: CGPoint(x: waves.minX + 0.81390 * waves.width, y: waves.minY + 10.75), controlPoint2: CGPoint(x: waves.minX + 0.91590 * waves.width, y: waves.minY + 7.17))
        strokeColor2.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: waves.minX + 0.00000 * waves.width, y: waves.minY + 5.91))
        bezier3Path.addCurve(to: CGPoint(x: waves.minX + 0.28917 * waves.width, y: waves.minY + 23), controlPoint1: CGPoint(x: waves.minX + 0.13467 * waves.width, y: waves.minY + 17.3), controlPoint2: CGPoint(x: waves.minX + 0.23106 * waves.width, y: waves.minY + 23))
        bezier3Path.addCurve(to: CGPoint(x: waves.minX + 0.53734 * waves.width, y: waves.minY + 0.92), controlPoint1: CGPoint(x: waves.minX + 0.37633 * waves.width, y: waves.minY + 23), controlPoint2: CGPoint(x: waves.minX + 0.46478 * waves.width, y: waves.minY + 0.92))
        bezier3Path.addCurve(to: CGPoint(x: waves.minX + 0.86804 * waves.width, y: waves.minY + 19.07), controlPoint1: CGPoint(x: waves.minX + 0.60990 * waves.width, y: waves.minY + 0.92), controlPoint2: CGPoint(x: waves.minX + 0.81756 * waves.width, y: waves.minY + 17.59))
        bezier3Path.addCurve(to: CGPoint(x: waves.minX + 1.00000 * waves.width, y: waves.minY + 14.46), controlPoint1: CGPoint(x: waves.minX + 0.90170 * waves.width, y: waves.minY + 20.06), controlPoint2: CGPoint(x: waves.minX + 0.94569 * waves.width, y: waves.minY + 18.52))
        strokeColor3.setStroke()
        bezier3Path.lineWidth = 1.5
        bezier3Path.stroke()
    }

}
